// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20210812192639_characterIMGRoute")]
    partial class characterIMGRoute
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackEnd.Models.Character", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Initiative")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeletable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPlayable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UrlAvatarImg")
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("CharacterID");

                    b.ToTable("CharacterDB");
                });

            modelBuilder.Entity("BackEnd.Models.Combat", b =>
                {
                    b.Property<int>("CombatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DofCombat")
                        .HasColumnType("DATE");

                    b.HasKey("CombatID");

                    b.ToTable("CombatDB");
                });

            modelBuilder.Entity("BackEnd.Models.CombatCharacters", b =>
                {
                    b.Property<int>("CombatID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CombatID", "CharacterID", "Id");

                    b.HasIndex("CharacterID");

                    b.ToTable("CombatCharacters");
                });

            modelBuilder.Entity("BackEnd.Models.CombatCharacters", b =>
                {
                    b.HasOne("BackEnd.Models.Character", "Character")
                        .WithMany("CombatCharacters")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Combat", "Combat")
                        .WithMany("CombatCharacters")
                        .HasForeignKey("CombatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Combat");
                });

            modelBuilder.Entity("BackEnd.Models.Character", b =>
                {
                    b.Navigation("CombatCharacters");
                });

            modelBuilder.Entity("BackEnd.Models.Combat", b =>
                {
                    b.Navigation("CombatCharacters");
                });
#pragma warning restore 612, 618
        }
    }
}
